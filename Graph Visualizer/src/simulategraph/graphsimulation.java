/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulategraph;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Shape;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.geom.Ellipse2D;
import javax.swing.JOptionPane;
import java.util.*;
import java.util.Scanner;
import java.io.*;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import java.lang.*;
import java.text.AttributedCharacterIterator;
import java.util.Map.Entry;

/**
 *
 * @author elitesf
 */
class Vertex{
    String name;
    int x;
    int y;
    
    Vertex(String name,int x,int y)
    {
        this.name = name;
        this.x= x;
        this.y =y;
    }
     public String getName()
    {
        return this.name;
    }
    public int getX()
    {
        return this.x;
    }
    public int getY()
    {
        return this.y;
    }
}
class Edge{
   
    String des;
    int weight;
    
    Edge(String des,int weight)
    {
        this.des = des;
        this.weight = weight;
    }
     public String getName()
    {
        return this.des;
    }
    public int getweight()
    {
        return this.weight;
    }
    public void setweight(int weight)
    {
         this.weight= weight;
    }
    
}

class Vrtxsort implements Comparator<Vertex>
{
    public int compare(Vertex path1,Vertex path2)
    {
        return path1.getName().compareTo(path2.getName());
    }
}
class Edgesort implements Comparator<Edge>
{
    public int compare(Edge path1,Edge path2)
    {
        return path1.getName().compareTo(path2.getName());
    }
}


public class graphsimulation extends javax.swing.JFrame implements MouseListener {
//
    /**
     * Creates new form graphsimulation
     */ 
    class NegativeNoException extends Exception 
    { 
       NegativeNoException()
       {
      
       }
    } 
    class InvalidEntryException extends Exception 
    { 
       InvalidEntryException()
       {
      
       }
    } 
     ArrayList<Vertex> lvrtx; 
     TreeMap <String,ArrayList<Edge>> graph; 
     public graphsimulation() {
         
        initComponents();
        addMouseListener(this);
      //  this.setVisible(true);
        
        lvrtx= new ArrayList<Vertex>();
        graph= new TreeMap <String,ArrayList<Edge>>();   
    }
 
/**  
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * 
     */
  //   Shape circle= new Ellipse2D.Float(10,110,80,80);
    
    public void actionPerformed(ActionEvent a)
    {
        
    }
    
    int x,y,a=0;
    @Override
    public void paint(Graphics g) 
    {
          int x1=0,y1=0,x2=0,y2=0;
          super.paint(g);
          for(Vertex v: lvrtx)
          {
              x= v.getX();
              y= v.getY();
              g.drawOval(7*x,7*y,20,20);
              g.setColor(Color.BLUE);
              g.fillOval(7*x,7*y,20,20);
              g.drawString(v.getName(),7*x-5,7*y-5);
          }
          
          for( Map.Entry val : graph.entrySet() )
        {
            String key = (String) val.getKey();
            for(Vertex v: lvrtx)
            {
                if(v.getName().equals(key))
                {
                    x1= v.getX()*7;
                    y1= v.getY()*7;
                    break;
                }
            }
            ArrayList<Edge> path  =  (ArrayList <Edge>) val.getValue();
            
            for(Edge e1: path)
            {
               String k1= e1.getName();
               String k2= Integer.toString(e1.getweight());
                
                for(Vertex v: lvrtx)
              {
                 if(v.getName().equals(k1))
                 {
                    x2= v.getX()*7;
                    y2= v.getY()*7;
                    break;
                 }
              }
                 if(lvrtx.size()>1)
                 g.drawLine(x1,y1,x2,y2);
                 g.drawString(k2,(x1+x2)/2+10,(y1+y2)/2+10);
            }
           
        }
      
    }
    public void mouseClicked(MouseEvent e)
    {
       x= e.getX(); 
       y= e.getY();
       int f=0;
       int x1,y1,x2,y2;
       for(Vertex v: lvrtx)
       {
            x1=v.getX()*7;
            y1=v.getY()*7;
            int d=(int) Math.sqrt((y - y1) * (y - y1) + (x - x1) * (x - x1));
            if(d<=20)
            {
                
                lvrtx.remove(v);
                f=1;
                break;
            }
       }    
       
       if(f==0)
       {  try
         { 
          String name= JOptionPane.showInputDialog(graphsimulation.this, "Enter vertex name");
          if(name==null)
              throw new InvalidEntryException();
            Vertex v=new Vertex(name,x/7,y/7);
            lvrtx.add(v);
         } 
         catch (InvalidEntryException e2)
         {
                     
         }
         
          
       }
       
       
        
       
       repaint();
    }
    
    public void mouseExited(MouseEvent e)                                  // reference taken from stack overflow (for Adding mouse listener functionality)
    {
        
    }
    public void mousePressed(MouseEvent e)
    {
        
    }
    public void mouseReleased(MouseEvent e)
    {
        
    }
    public void mouseEntered(MouseEvent e)
    {
        
    }
     void sortvrtx(ArrayList<Vertex> newlist)
     {
         Collections.sort(newlist, new Vrtxsort());
     }
     
     void sortedge(TreeMap <String,ArrayList<Edge>> newlist)
     {
         for( Map.Entry val : newlist.entrySet() )
        {
            String key = (String) val.getKey();
            ArrayList<Edge> path  = newlist.get(key);
            Collections.sort(path, new Edgesort());
            
        }
         
     }
     
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblname1 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        lbladdx1 = new javax.swing.JLabel();
        txtaddx = new javax.swing.JTextField();
        lbladdy1 = new javax.swing.JLabel();
        txtaddy = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        lblsearch = new javax.swing.JLabel();
        lblsearchname = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        btnsearch = new javax.swing.JButton();
        lbldel = new javax.swing.JLabel();
        lbldelete = new javax.swing.JLabel();
        txtdelete = new javax.swing.JTextField();
        btndelete = new javax.swing.JButton();
        lblmod = new javax.swing.JLabel();
        lblold = new javax.swing.JLabel();
        txtmodify = new javax.swing.JTextField();
        lblmodifyX = new javax.swing.JLabel();
        txtmodifyX = new javax.swing.JTextField();
        lblmodifyY = new javax.swing.JLabel();
        txtmodifyY = new javax.swing.JTextField();
        btnmodify = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lbladdS = new javax.swing.JLabel();
        txtaddS = new javax.swing.JTextField();
        lbladdD = new javax.swing.JLabel();
        txtaddD = new javax.swing.JTextField();
        lbladdW = new javax.swing.JLabel();
        txtaddW = new javax.swing.JTextField();
        btnaddedge = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblsearchS = new javax.swing.JLabel();
        txtsearchS = new javax.swing.JTextField();
        lblsearchD = new javax.swing.JLabel();
        txtsearchD = new javax.swing.JTextField();
        btnsearchedge = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lbldeleteS = new javax.swing.JLabel();
        txtdeleteS = new javax.swing.JTextField();
        lbldeleteD = new javax.swing.JLabel();
        txtdeleteD = new javax.swing.JTextField();
        btndeleteedge = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblmodifyS = new javax.swing.JLabel();
        txtmodifyS = new javax.swing.JTextField();
        lblmodifyD = new javax.swing.JLabel();
        txtmodifyD = new javax.swing.JTextField();
        lblmodifyW = new javax.swing.JLabel();
        txtmodifyW = new javax.swing.JTextField();
        btnmodifyedge = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btlload = new javax.swing.JButton();
        txtload = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtexport = new javax.swing.JTextField();
        btnexport = new javax.swing.JButton();
        lblgraph = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mysimulator");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setText("1.  Add vertex");

        lblname1.setText("Enter name :");

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });

        lbladdx1.setText("Enter x coordinate :");

        lbladdy1.setText("Enter y coordinate :");

        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        lblsearch.setText("2. Search vertex");

        lblsearchname.setText("Enter vertex name :");

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });

        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        lbldel.setText("3. Delete vertex");

        lbldelete.setText("Enter vertex name :");

        txtdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdeleteActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        lblmod.setText("4. Modify vertex");

        lblold.setText("Enter name :");

        lblmodifyX.setText("Enter new x coord. :");

        txtmodifyX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmodifyXActionPerformed(evt);
            }
        });

        lblmodifyY.setText("Enter new y coord. :");

        btnmodify.setText("Modify");
        btnmodify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodifyActionPerformed(evt);
            }
        });

        jLabel2.setText("5. Add edge");

        lbladdS.setText("Enter source :");

        lbladdD.setText("Enter destination: ");

        txtaddD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddDActionPerformed(evt);
            }
        });

        lbladdW.setText("Enter weight:");

        btnaddedge.setText("Add");
        btnaddedge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddedgeActionPerformed(evt);
            }
        });

        jLabel3.setText("6. Search edge");

        lblsearchS.setText("Enter source :");

        lblsearchD.setText("Enter destination :");

        btnsearchedge.setText("Search");
        btnsearchedge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchedgeActionPerformed(evt);
            }
        });

        jLabel4.setText("7. Delete Edge");

        lbldeleteS.setText("Enter source :");

        lbldeleteD.setText("Enter destination :");

        btndeleteedge.setText("Delete");
        btndeleteedge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteedgeActionPerformed(evt);
            }
        });

        jLabel5.setText("8. Modify Edge");

        lblmodifyS.setText("Enter source :");

        lblmodifyD.setText("Enter destination :");

        lblmodifyW.setText("Enter new weight: ");

        btnmodifyedge.setText("Modify");
        btnmodifyedge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodifyedgeActionPerformed(evt);
            }
        });

        jLabel7.setText("9. Load input file");

        btlload.setText("Load");
        btlload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlloadActionPerformed(evt);
            }
        });

        jLabel8.setText("10. Export output into file");

        btnexport.setText("Export");
        btnexport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexportActionPerformed(evt);
            }
        });

        lblgraph.setText("GRAPH CREATION");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel1)
                                .addGap(3, 3, 3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblname1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(lblgraph)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(37, 37, 37))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblsearchS)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtsearchS, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblsearchD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtsearchD, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(btnsearchedge))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lbladdS)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtaddS))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnaddedge, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbladdD)
                                        .addComponent(lbladdW)))
                                .addGap(4, 4, 4)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtaddW, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtaddD)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblsearch)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lblsearchname)
                                        .addGap(4, 4, 4)
                                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lbldel)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lbldelete)
                                        .addGap(4, 4, 4)
                                        .addComponent(txtdelete))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(lbladdx1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtaddx, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(lbladdy1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtaddy, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnsearch)
                                    .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(lblmodifyX)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtmodifyX))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(lblold, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtmodify, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(lblmod))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnmodify)
                                            .addComponent(lblmodifyY))
                                        .addGap(18, 18, 18)
                                        .addComponent(txtmodifyY, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lbldeleteS)
                                        .addGap(3, 3, 3)
                                        .addComponent(txtdeleteS, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(lbldeleteD)
                                                .addGap(18, 18, 18))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(lblmodifyS)
                                                .addGap(29, 29, 29)))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtmodifyS, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtdeleteD, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(btndeleteedge))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblmodifyW)
                                            .addComponent(lblmodifyD))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtmodifyD)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(txtmodifyW, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(btnexport)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtexport, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel8))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7)
                                .addComponent(btnmodifyedge))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btlload, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtload, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(78, 78, 78))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(102, 102, 102))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblgraph, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblname1)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblsearchS)
                            .addComponent(txtsearchS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbladdx1)
                            .addComponent(txtaddx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblsearchD)
                            .addComponent(txtsearchD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbladdy1)
                            .addComponent(txtaddy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnsearchedge))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnadd)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblsearchname)
                            .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnsearch)
                            .addComponent(lbldeleteS)
                            .addComponent(txtdeleteS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbldel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbldeleteD)
                            .addComponent(txtdeleteD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbldelete)
                            .addComponent(txtdelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btndelete)
                            .addComponent(btndeleteedge))
                        .addGap(18, 18, 18)
                        .addComponent(lblmod)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)
                                        .addGap(4, 4, 4)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblold)
                                            .addComponent(txtmodify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addComponent(lblmodifyS)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(lblmodifyX)
                                                    .addComponent(txtmodifyX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(32, 32, 32)
                                                .addComponent(lblmodifyD)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblmodifyY)
                                            .addComponent(txtmodifyY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnmodify))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(lblmodifyW)
                                                    .addComponent(txtmodifyW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(txtmodifyD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(txtmodifyS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(btnmodifyedge))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbladdS)
                            .addComponent(txtaddS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbladdD)
                            .addComponent(txtaddD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btlload)
                            .addComponent(txtload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(jLabel8)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbladdW)
                            .addComponent(txtaddW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnaddedge)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtexport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnexport)))
                .addContainerGap(224, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(572, 572, 572)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(39, 39, 39))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(40, 40, 40))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
      // JOptionPane.showMessageDialog(graphsimulation.this, "mouse is pressed");// TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        String name= txtname.getText();
        int x = 0,y = 0;
        try
        {
            x=Integer.parseInt(txtaddx.getText().trim());
            y=Integer.parseInt(txtaddy.getText().trim());
            
            try
            {
                if(x>=0 && y>=0)
                {
                   Vertex v=new Vertex(name,x,y);
                   lvrtx.add(v); 
                  // drawCircle(x, y);
                }
                else throw new NegativeNoException(); 
            }
            catch(NegativeNoException e)
            {
                JOptionPane.showMessageDialog(graphsimulation.this, "Enter coordinates as non-negative integers! "); 
            }
            
           // JOptionPane.showMessageDialog(graphsimulation.this, "added ");
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(graphsimulation.this, "Enter coordinates as numbers! ");
        }
        sortvrtx(lvrtx);
        txtname.setText("");
        txtaddx.setText("");
        txtaddy.setText("");
        repaint();
            
    }//GEN-LAST:event_btnaddActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
            
            int f=0;
            String name= txtsearch.getText();
            try
            {
                 for(Vertex v: lvrtx)
                 { if(v.getName().equals(name))
                    {
                       JOptionPane.showMessageDialog(graphsimulation.this, "Vertex: "+v.getName() +", X: "+v.getX()+", Y: "+v.getY());
                       f=1;
                       break;
                    }
                 }
                 if(f==0)
                 {
                     throw new InvalidEntryException();    
                 }
            } 
            catch(InvalidEntryException e)
            {
                JOptionPane.showMessageDialog(graphsimulation.this, "Vertex not found");
            }
                
            txtsearch.setText("");
            
    }//GEN-LAST:event_btnsearchActionPerformed

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void txtdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdeleteActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        
              int f1=0;
              String name= txtdelete.getText();
   
              try
              {
                    Iterator<Vertex> itr=lvrtx.iterator();
                    while(itr.hasNext()){
                        Vertex v1=(Vertex)itr.next();
                        if(v1.getName().equals(name)){
                            itr.remove();
                            f1=1;
                            repaint();
                        }
                    }
                 if(f1==0)
                 throw new InvalidEntryException();
              }             
              catch(InvalidEntryException e)
              {
                 JOptionPane.showMessageDialog(graphsimulation.this, "Vertex already not present");            
              } 
             
        
        Iterator<Entry<String,ArrayList<Edge>>> itr = graph.entrySet().iterator();  
        
         while(itr.hasNext())
        {
            Entry<String,ArrayList<Edge>> val= itr.next();
            String key = (String) val.getKey();
            if(key.equals(name))
            {
                graph.remove(key);
            }
            else
            {
                ArrayList<Edge> path  = graph.get(key);
                Iterator it  =  path.listIterator();
                while ( it.hasNext() )
                {
                     Edge g= (Edge)it.next();repaint();
                    if(g.getName().equals(name))
                    it.remove();
                }
            }
        }
                
               txtdelete.setText("");
               repaint();

    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnmodifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodifyActionPerformed
        
        int f1=0;
        int x=0,y=0;
        String name= txtmodify.getText();
        
        try
        {
           x=Integer.parseInt(txtmodifyX.getText());
           y=Integer.parseInt(txtmodifyY.getText());   
           
           for(Vertex v: lvrtx)
            { if(v.getName().equals(name))
              {
                 lvrtx.remove(v);
                 Vertex v1=new Vertex(name,x,y);
                 lvrtx.add(v1);
               //  JOptionPane.showMessageDialog(graphsimulation.this, "Vertex '"+ v.getName()+"' modified");
                 f1=1;
                 break;
              }
               
            }
              if(f1==0)
              JOptionPane.showMessageDialog(graphsimulation.this, "Enter valid vertex"); 
              // throw new MyException(); 
        } 
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(graphsimulation.this, "Enter coordinates as integers! ");
        }
        txtmodify.setText("");
        txtmodifyX.setText("");
        txtmodifyY.setText(""); 
        repaint();
           
    }//GEN-LAST:event_btnmodifyActionPerformed

    private void txtmodifyXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmodifyXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmodifyXActionPerformed

    private void txtaddDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtaddDActionPerformed

    private void btnaddedgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddedgeActionPerformed
         
         String src= txtaddS.getText();
         String des= txtaddD.getText();
         int weight=0;
         try
         {    
            weight= Integer.parseInt(txtaddW.getText());
         }
         catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(graphsimulation.this, "Enter weight as number! ");
        }
         Edge e= new Edge(des,weight);
         int f1=0,f2=0;
         
        for(Vertex v: lvrtx)
        {
            if(v.getName().equals(src))
                f1++;
            if(v.getName().equals(des))
                f2++;
        }
        
        try
        {
          if(f1==1 && f2==1)
          {
            if(graph.containsKey(src))
           {
             ArrayList<Edge> list= graph.get(src);
             list.add(e);
             graph.put(src,list);
           }
            else
           {
             ArrayList<Edge> list= new ArrayList<Edge>();
             list.add(e);
             graph.put(src,list);
           }
            
          }
          else 
            throw new InvalidEntryException();    
        }
        catch(InvalidEntryException e1)
        {
           JOptionPane.showMessageDialog(graphsimulation.this, " Invalid source - destination ");           
        } 
        
        txtaddS.setText("");
        txtaddD.setText("");
        txtaddW.setText("");  
        repaint();
            
         // TODO add your handling code here:
    }//GEN-LAST:event_btnaddedgeActionPerformed

    private void btnsearchedgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchedgeActionPerformed
       
         String src= txtsearchS.getText();
         String des= txtsearchD.getText(); 
         int f=0;
       try
       {
         if(graph.containsKey(src))
         {
             ArrayList<Edge> l= graph.get(src);
             for(Edge e: l)
            {
              if(e.getName().equals(des))
              {
                  JOptionPane.showMessageDialog(graphsimulation.this, "Edge "+src+" - "+des+" found with weight: "+e.getweight());
                  f=1;
                  break;
              }    
            }
             if(f==0)
             {
                JOptionPane.showMessageDialog(graphsimulation.this, "Edge not found"); 
             }
             
         }
         else
         {
            throw new InvalidEntryException();  
         }
       }
       catch(InvalidEntryException e1)
       {
           JOptionPane.showMessageDialog(graphsimulation.this, "Source not found");           
       } 
      
        txtsearchS.setText("");
        txtsearchD.setText("");
         
    }//GEN-LAST:event_btnsearchedgeActionPerformed

    private void btndeleteedgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteedgeActionPerformed
        
        String src= txtdeleteS.getText();
        String des= txtdeleteD.getText(); 
         int f=0;
         try
        {
          if(graph.containsKey(src))
          {
             ArrayList<Edge> l= graph.get(src);
             for(Edge e: l)
            {
              if(e.getName().equals(des))
              {
                  l.remove(e);
                  f=1;
                  break;
              }    
            }
             if(f==0)
             {
                JOptionPane.showMessageDialog(graphsimulation.this, "Edge already not present"); 
             }
             
          }
           else
           throw new InvalidEntryException();  
        }
         catch(InvalidEntryException e)
         {
            JOptionPane.showMessageDialog(graphsimulation.this, "Edge already not present"); 
         }
         txtdeleteS.setText("");
         txtdeleteD.setText("");
         repaint();
    }//GEN-LAST:event_btndeleteedgeActionPerformed

    private void btnmodifyedgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodifyedgeActionPerformed
        
        String src= txtmodifyS.getText();
        String des= txtmodifyD.getText(); 
        
        int weight=0;
        try
        {    
          weight= Integer.parseInt(txtmodifyW.getText());
        }
         catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(graphsimulation.this, "Enter weight as number! ");
        }
        int f=0;
        try
       {
         if(graph.containsKey(src))
         {
             ArrayList<Edge> l= graph.get(src);
             for(Edge e: l)
            {
              if(e.getName().equals(des))
              {
                  e.setweight(weight);
                  f=1;
                  break;
              }    
            }
            if(f==0)
            {
               JOptionPane.showMessageDialog(graphsimulation.this, "Invalid edge entries"); 
            }
             
         }
          else
           throw new InvalidEntryException();  
       }
        catch(InvalidEntryException e1)
       {
           JOptionPane.showMessageDialog(graphsimulation.this, "Source not found");           
       } 
         txtmodifyW.setText("");
         txtmodifyS.setText("");
         txtmodifyD.setText("");
         repaint();
        
        
    }//GEN-LAST:event_btnmodifyedgeActionPerformed

    private void btlloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlloadActionPerformed
        
      
         JFileChooser j = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
         
         j.setAcceptAllFileFilterUsed(false);
         
         j.setDialogTitle("Select .txt file as input");                                                                // reference taken from "filechooser geeksforgeeks" 
         
         FileNameExtensionFilter res = new FileNameExtensionFilter("Only .txt files","txt");
         
         j.addChoosableFileFilter(res);
         
         int r = j.showOpenDialog(null); 
         
  
            if (r == JFileChooser.APPROVE_OPTION) 
            { 
              
                txtload.setText(j.getSelectedFile().getAbsolutePath());
                try
                {
                    try
                     (FileReader inputFile = new FileReader(j.getSelectedFile().getAbsolutePath())                     //reference taken from https://www.quora.com/How-can-I-create-and-read-a-text-file-in-Java-using-NetBeans
                    ) {                                                                                               
                         Scanner parser = new Scanner(inputFile);
                         int f=0;
                         int n1= parser.nextInt();
                         String escape = parser.nextLine();
                         
                         
                         for(int i=0;i<n1;i++)
                         {
                             String str= parser.nextLine();
                            try
                           {    
                             if(str.contains(" "))
                            {    
                             
                             String words[]= str.split(" ");
                             Vertex v= new Vertex(words[0],Integer.parseInt(words[1]),Integer.parseInt(words[2]));
                             lvrtx.add(v);
                             sortvrtx(lvrtx);
                            }
                             else throw new InvalidEntryException();
                           
                           }
                            catch(InvalidEntryException e)
                            {
                                f=1;
                                JOptionPane.showMessageDialog(graphsimulation.this, "Invalid no of Vertices");
                                break;
                            }
                             
                         } 
                       //  repaint();
                         if(f==0)
                         {
                             
                         int n2= parser.nextInt();
                         String escape2 = parser.nextLine();
                         
                         for(int i=0;i<n2;i++)
                         {
                             String str= parser.nextLine();
                             String words[]= str.split(" ");
                             String src= words[0];
                             String des= words[1];
                             int weight= Integer.parseInt(words[2]);
                             Edge e= new Edge(des,weight);
                             
                             if(graph.containsKey(src))
                             {
                                  ArrayList<Edge> list= graph.get(src);
                                  list.add(e);
                                  graph.put(src,list);
                             }
                             else
                            {
                                  ArrayList<Edge> list= new ArrayList<>();
                                  list.add(e);
                                  graph.put(src,list);
                            }
                             
                         }
                         repaint();
                         }
                         
                
                    }
                }
                catch(FileNotFoundException exception)
                {
                	System.out.println("File not found");
                }
                catch(IOException exception)
                {
	
                
                } 
                
            // if the user cancelled the operation 
            
    }//GEN-LAST:event_btlloadActionPerformed
    }
    private void btnexportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexportActionPerformed
        
         JFileChooser j = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
         
         j.setAcceptAllFileFilterUsed(false);
         
         j.setDialogTitle("Select .txt file as input");                                                                // reference taken from "filechooser geeksforgeeks"
         
         FileNameExtensionFilter res = new FileNameExtensionFilter("Only .txt files","txt");
         
         j.addChoosableFileFilter(res);
         
         int r = j.showOpenDialog(null); 
         
            if (r == JFileChooser.APPROVE_OPTION) { 
                
                txtexport.setText(j.getSelectedFile().getAbsolutePath()); 
            }
           
            sortedge(graph);
            
            FileWriter out = null;                                                                    
        try 
        {
            out = new FileWriter(new File(j.getSelectedFile().getAbsolutePath()));
            
            out.write(lvrtx.size()+"\n");
            for(Vertex v: lvrtx)
            {
                out.write(v.getName()+" "+v.getX()+" "+v.getY()+"\n");
               
            }  
           
             int c=0;
             for( Map.Entry val : graph.entrySet() )
            {
               String key = (String) val.getKey();
               ArrayList<Edge> path  = graph.get(key); 
               for(Edge e: path)
               {
                  c++;
               }
            
            }   
             out.write(c+"\n");
             for( Map.Entry val : graph.entrySet() )
            {
               String key = (String) val.getKey();
               ArrayList<Edge> path  = graph.get(key);
             
               
               for(Edge e: path)
               {
                   out.write(key+" "+e.getName()+" "+e.getweight()+"\n");
                   //System.out.println(key+" "+e.getName()+" "+e.getweight()+"\n");
               }
            
            }         
        } 
        catch (IOException e)                                                            //reference taken from https://www.journaldev.com/878/java-write-to-file 
        {                                                                               
            e.printStackTrace();
        }
        finally
        {
            try {
                out.close();
                } 
            catch (IOException e) 
            {
                e.printStackTrace();
            }
        }
    
  
            
       
    }//GEN-LAST:event_btnexportActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    { 
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(graphsimulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(graphsimulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(graphsimulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(graphsimulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new graphsimulation().setVisible(true);

            }
            
          
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btlload;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnaddedge;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btndeleteedge;
    private javax.swing.JButton btnexport;
    private javax.swing.JButton btnmodify;
    private javax.swing.JButton btnmodifyedge;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btnsearchedge;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbladdD;
    private javax.swing.JLabel lbladdS;
    private javax.swing.JLabel lbladdW;
    private javax.swing.JLabel lbladdx1;
    private javax.swing.JLabel lbladdy1;
    private javax.swing.JLabel lbldel;
    private javax.swing.JLabel lbldelete;
    private javax.swing.JLabel lbldeleteD;
    private javax.swing.JLabel lbldeleteS;
    private javax.swing.JLabel lblgraph;
    private javax.swing.JLabel lblmod;
    private javax.swing.JLabel lblmodifyD;
    private javax.swing.JLabel lblmodifyS;
    private javax.swing.JLabel lblmodifyW;
    private javax.swing.JLabel lblmodifyX;
    private javax.swing.JLabel lblmodifyY;
    private javax.swing.JLabel lblname1;
    private javax.swing.JLabel lblold;
    private javax.swing.JLabel lblsearch;
    private javax.swing.JLabel lblsearchD;
    private javax.swing.JLabel lblsearchS;
    private javax.swing.JLabel lblsearchname;
    private javax.swing.JTextField txtaddD;
    private javax.swing.JTextField txtaddS;
    private javax.swing.JTextField txtaddW;
    private javax.swing.JTextField txtaddx;
    private javax.swing.JTextField txtaddy;
    private javax.swing.JTextField txtdelete;
    private javax.swing.JTextField txtdeleteD;
    private javax.swing.JTextField txtdeleteS;
    private javax.swing.JTextField txtexport;
    private javax.swing.JTextField txtload;
    private javax.swing.JTextField txtmodify;
    private javax.swing.JTextField txtmodifyD;
    private javax.swing.JTextField txtmodifyS;
    private javax.swing.JTextField txtmodifyW;
    private javax.swing.JTextField txtmodifyX;
    private javax.swing.JTextField txtmodifyY;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txtsearchD;
    private javax.swing.JTextField txtsearchS;
    // End of variables declaration//GEN-END:variables
}
